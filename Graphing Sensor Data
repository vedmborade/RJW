import matplotlib.pyplot as plt
import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split

# Load data from CSV file
data = pd.read_csv('sensor.csv', usecols=['sensor_type', 'time', 'distance'])

# Map sensor_type to numeric values
data['sensor_type'] = data['sensor_type'].map({'IR': 0, 'Ultrasonic': 1})

# Split data into features and labels
X = data.drop('time', axis=1)
y = data['time']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a random forest regressor on the training data
rfr = RandomForestRegressor(n_estimators=100, random_state=42)
rfr.fit(X_train, y_train)

# Predict labels for the testing data using the trained model
y_pred = rfr.predict(X_test)

# Calculate the model performance metrics
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print('Mean Squared Error:', mse)
print('R-squared:', r2)

# Plot the performance of the IR and ultrasonic sensors
ir_data = data[data['sensor_type'] == 0]
ultrasonic_data = data[data['sensor_type'] == 1]

plt.plot(ir_data['distance'], ir_data['time'], 'ro', label='IR Sensor')
plt.plot(ultrasonic_data['distance'], ultrasonic_data['time'], 'bo', label='Ultrasonic Sensor')

plt.xlabel('Distance Traveled')
plt.ylabel('Time Before Crashing')
plt.title('IR vs Ultrasonic Sensor Performance')
plt.legend()
plt.show()

